<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABwAAAAcCAYAAAByDd+UAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABCJJREFUSEutlulS
        U1kUhe034FH6DdpH8T26qpvW0m7t7rJbRUyABFQChCnMMyQhgSRknkmAMDn8A/8p/FjudbwHzk0IBvVU
        nQpe7z3f3Xuvve7+6VYL64+79+/Ibb/I/tna5lNp+Qd3QLbv999+PW3hyMZbBNImu132iWy4e1/CNzGF
        8EYEofAGguth+IMheIdH4exygfdY9/KZthtB5YHbsmt//vU3JqdmUN3ZRW3/ADu7e6hUd1DarqBQKiOX
        LyKTzSOVzmIzuoV+zxDuP3hIcI1ntARl+vi2vX2vsLtXw/7hEfZq+zZYvlhCNl9AWmBJgcWTKUS3EtiI
        xOAPhNDR6dARsxTNl4ZNTc/i6PgN9g8OsSuwqkS2zcjKFShYTmCZnMAy2EpcwtbDmwhIqtcC6+jqcV8P
        tdKIkdFxHB4dqxQywoqks1ypoljeRq5gpTCTRSKZRiyeRCQWR3gzCg1b9QexvOrH4vIqul29GmpPryWQ
        GtN4ICm8rl5mClm3kIiIMAqIsKWVNSwsrWBuYQkzcwv4/0mHrumlkKhGCoTiuLpexYt66RQS9vbtO5yf
        n6MsIlpZCzTAJqU0r/oHcPfeA0LbVTGt6E4oecJUvSp19cqyXllVL6aQ4mBk5soXSphfXMbs/CKmZ+dB
        2LicOegdwaN/HuuWaSNQqZKCqO58gbFePIDiSIk4EimKo7Fe796/t0EzuTymZuYwIa1E2Oj4BDyDXjx5
        1nkpIIG5e1x9Kp3bpjjkYQX7ijjeSFrNlUylL2DDIsDXnkE87XgBlowsRpgaHZuQOogSS4YSVX+lVX+Z
        StTi0EqkOI6lhczFbHhHxlQ6X772KKCV1hSB0juhL/2lmjmn/tatUChajqIiziIp6Y1LLWPxBKJSz81o
        TNoigtPTDzZoRK73DwzBJZZI4OP/nqq0KuCayFk3M63qRy1G6Ox2NQJXpFG1OCiQH7UY4bPnjkYgm9UU
        B21LGwBbhY5D46awaN7su5IouSgGXpD058WBzs7ObO+5Hgqj09GlYPUpTXkGvEoc2jmCoY2mzsH+8k1O
        Y8w3iZExnxJHTV7KXEGBvXB2X8DqRePmm9TDmjmH7i/ChuRbyAzYYCLATocdVt8WqvHp8IyMv4TRfE3n
        MJuZ/XUVzB8IyqfJaYuMMFvjW/Z24nD2KMNlf5nmS+eoT+HA0LByEHMtiw50vep/bdZmAdtpsHwTfsfo
        DrQlRnUVjIbc4+6Tr30OHz9+wnUwnmkzb8PA1UjR7C2/9bplaRw57HOO/gAz/G89vEkq6TBXzzf6y/Hw
        0b/fDeUZ1iTX2lzDVDD/N42Wz1hpJPB6mB6v9JjIYjPFrYB5D++1BNL6mGhAbYMw35oH0vXNzWtGRBya
        bz4Im4OkNYLQHNz8dlp10fXhL6/x/3jPVyfuzw+50vuaGI2tAAAAAElFTkSuQmCC
</value>
  </data>
</root>