<UserControl x:Class="CAS.UI.UIControls.Auxiliary.DamageChart2DControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:auxiliary="clr-namespace:CAS.UI.UIControls.Auxiliary"
             xmlns:Properties="clr-namespace:CAS.UI.Properties"
             xmlns:general="clr-namespace:SmartCore.Entities.General;assembly=SmartCore"
             mc:Ignorable="d" 
             d:DesignHeight="650.735" d:DesignWidth="650.98">
    <UserControl.Resources>
        
        
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <SolidColorBrush x:Key="LineButtonBrush" Color="#FF14273D"/>

            <Geometry x:Key="ArrowLeft">M0,5 L10,10 10,0Z</Geometry>
            <Geometry x:Key="ArrowRight">M0,0 L10,5 L0,10Z</Geometry>

            <Path x:Key="ArrowLeftPath"
            Margin="4,3"
            Data="{StaticResource ArrowLeft}"
            Stroke="{StaticResource LineButtonBrush}" 
            Fill="{StaticResource LineButtonBrush}"
            Stretch="Fill"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"/>
            <Path x:Key="ArrowRightPath"
            Margin="4,3"
            Data="{StaticResource ArrowRight}"
            Stroke="{StaticResource LineButtonBrush}" 
            Fill="{StaticResource LineButtonBrush}"
            Stretch="Fill"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"/>

            <ContextMenu x:Key="ButtonContextMenu">
                <MenuItem Header="Edit Info" Click="ContextMenuButtonClick">
                </MenuItem>
            </ContextMenu>
            
            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ContextMenu" Value="{StaticResource ButtonContextMenu}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="Root" Opacity="0.5">
                                <Border x:Name="DisabledElement" Background="DarkGray" CornerRadius="2" Opacity="0">
                                    <Border BorderBrush="LightGray" BorderThickness="0,0,1,1" CornerRadius="2" />
                                </Border>
                                <Border x:Name="NormalElement" Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                </Border>
                                <Border x:Name="MouseOverElement" BorderBrush="#888888" 
                                            Background="#8F8F8F" CornerRadius="2" Opacity="0" 
                                            BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Border x:Name="PressedElement" Background="#9f9f9f" CornerRadius="2" Opacity="0" 
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="#909090"/>
                                <ContentPresenter x:Name="ContentHost" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      Margin="{TemplateBinding Padding}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.5" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.25" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.Setters>
                                        <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                                        <Setter Property="ContextMenu.IsOpen" Value="True"/>
                                    </Trigger.Setters>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.5" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.75" />
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentHost" To="#959595"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="ContextMenu" Value="{StaticResource ButtonContextMenu}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="Root" Opacity="0">
                                <Border x:Name="DisabledElement" Background="DarkGray" CornerRadius="2" Opacity="0">
                                    <Border BorderBrush="LightGray" BorderThickness="0,0,1,1" CornerRadius="2" />
                                </Border>
                                <Border x:Name="NormalElement" Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                </Border>
                                <Border x:Name="MouseOverElement" BorderBrush="#888888" 
                                            Background="#8F8F8F" CornerRadius="2" Opacity="0" 
                                            BorderThickness="{TemplateBinding BorderThickness}"/>
                                <Border x:Name="PressedElement" Background="#9f9f9f" CornerRadius="2" Opacity="0" 
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="#909090"/>
                                <ContentPresenter x:Name="ContentHost" 
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                      Margin="{TemplateBinding Padding}" 
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.25" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.Setters>
                                        <Setter Property="ToolTipService.IsEnabled" Value="True"/>
                                        <Setter Property="ContextMenu.IsOpen" Value="True"/>
                                    </Trigger.Setters>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="PressedElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.75" />
                                                <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentHost" To="#959595"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <auxiliary:ScrollbarOnFarRightConverter x:Key="ScrollbarOnRightConverter"/>
            <auxiliary:ScrollbarOnFarLeftConverter x:Key="ScrollbarOnLeftConverter"/>
            <auxiliary:AddButtonVisibilityConverter x:Key="AddButtonVisibilityConverter"/>
            <auxiliary:BitmapConverter x:Key="ImageConverter"/>
            
            <Style TargetType="{x:Type ListView}" x:Key="ListViewStyle">
                <Setter Property="Background" Value="#FF232323"/>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border Name="TabPanelBorder"
                                    Height="Auto"
                                    Background="{TemplateBinding Background}"
                                    >
                                <ScrollViewer SnapsToDevicePixels="True"
                                              Name="HeaderPanel"
                                              HorizontalScrollBarVisibility="Hidden" 
                                              VerticalScrollBarVisibility="Disabled"
                                              ClipToBounds="True"
                                              Focusable="False"
                                              Background="#FF232323">
                                    <ScrollViewer.Style>
                                        <Style x:Name="ScrollViewerForTabControl" TargetType="ScrollViewer">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <RepeatButton Grid.Column="0" 
                                                                          Click="PrevLargeChartButton_OnClick"
                                                                          Background="Transparent"
                                                                          HorizontalAlignment="Stretch"
                                                                          VerticalAlignment="Stretch"
                                                                          Command="ScrollBar.PageLeftCommand"
                                                                          Content="{StaticResource ArrowLeftPath}"
                                                                          IsEnabled="{Binding ElementName=HeaderPanel, Path=HorizontalOffset, Converter={StaticResource ScrollbarOnLeftConverter}}"/>
                                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                                    VirtualizingStackPanel.IsVirtualizing="False"                                                    
                                                                                    SnapsToDevicePixels="True" 
                                                                                    Grid.Column="1" 
                                                                                    Grid.ColumnSpan="2"
                                                                                    Content="{TemplateBinding ScrollViewer.Content}"/>
                                                            <Button x:Name="AddNewChartButton" Grid.Column="2" 
                                                                    Click="AddNewChartButtonOnClick" Width="89" Opacity="1">
                                                                <Image HorizontalAlignment="Stretch"
                                                                       VerticalAlignment="Stretch">
                                                                    <Image.Source>
                                                                        <Binding Source="{x:Static Properties:Resources.AddIconLargeGray}" 
                                                                                 Converter="{StaticResource ImageConverter}"/>
                                                                    </Image.Source>
                                                                </Image>
                                                                <Button.IsEnabled>
                                                                    <MultiBinding Converter="{StaticResource AddButtonVisibilityConverter}">
                                                                        <Binding ElementName="HeaderPanel" Path="HorizontalOffset"/>
                                                                        <Binding ElementName="HeaderPanel" Path="ViewportWidth"/>
                                                                        <Binding ElementName="HeaderPanel" Path="ExtentWidth"/>
                                                                    </MultiBinding>
                                                                </Button.IsEnabled>
                                                            </Button>
                                                            <RepeatButton Grid.Column="3"
                                                                          Click="NextLargeChartButton_OnClick"
                                                                          Background="Transparent"
                                                                          HorizontalAlignment="Stretch"
                                                                          VerticalAlignment="Stretch"
                                                                          Command="ScrollBar.PageRightCommand" 
                                                                          Content="{StaticResource ArrowRightPath}">
                                                                <RepeatButton.IsEnabled>
                                                                    <MultiBinding Converter="{StaticResource ScrollbarOnRightConverter}">
                                                                        <Binding ElementName="HeaderPanel" Path="HorizontalOffset"/>
                                                                        <Binding ElementName="HeaderPanel" Path="ViewportWidth"/>
                                                                        <Binding ElementName="HeaderPanel" Path="ExtentWidth"/>
                                                                    </MultiBinding>
                                                                </RepeatButton.IsEnabled>
                                                            </RepeatButton>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <DataTrigger Value="false">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource ScrollbarOnRightConverter}">
                                                                        <Binding ElementName="HeaderPanel" Path="HorizontalOffset"/>
                                                                        <Binding ElementName="HeaderPanel" Path="ViewportWidth"/>
                                                                        <Binding ElementName="HeaderPanel" Path="ExtentWidth"/>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ScrollViewer.Style>
                                    <StackPanel Name="TabPanel"
                                                Orientation="Horizontal"
                                                IsItemsHost="true" 
                                                Margin="0"                                  
                                                KeyboardNavigation.TabIndex="1"/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </Grid.Resources>
        <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <TabItem Header="Charts">
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="100"/>
                    </Grid.RowDefinitions>
                    <Grid Name="MainGrid" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center">Shoose chart:</Label>
                        <ComboBox Name="ChartComboBox" Width="300" FontSize="14" SelectedItem="{x:Null}" Grid.Row="0" Grid.Column="2" SelectionChanged="ChartComboBox_OnSelectionChanged">
                        </ComboBox>
                        <Grid Name="ChartGrid" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4">
                        </Grid>
                    </Grid>
                    <Button Name="PrevLargeChartButton" Grid.Column="0" Grid.Row="0"
                            Opacity="0.1" Content="{StaticResource ArrowLeftPath}" Click="PrevLargeChartButton_OnClick"/>
                    <Button Name="NextLargeChartButton" Grid.Column="2" Grid.Row="0"
                            Opacity="0.1" Content="{StaticResource ArrowRightPath}" Click="NextLargeChartButton_OnClick"/>
                    <ListView Name="DamageChartsListView" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" 
                              Style="{StaticResource ListViewStyle}" SelectionChanged="DamageChartsListView_OnSelectionChanged"
                              x:FieldModifier="private">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="general:DamageDocument">
                                <Border x:Name="NormalElement"
                                        BorderBrush="Black"
                                        BorderThickness="2">
                                    <Grid Opacity="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.ColumnSpan="2" Grid.RowSpan="2" 
                                               Source="{Binding Path=DamageChartImage, 
                                                                Mode=OneWay, 
                                                                Converter={StaticResource ImageConverter}}">
                                        </Image>
                                        <Button Name="CloseButton" Grid.Column="1" Grid.Row="0" Click="CloseButton_OnClick"
                                                ToolTip="Delete Chart" Background="Black" Foreground="White"
                                                Opacity="0" Height="15" Width="15" Tag="{Binding}">
                                            X
                                        </Button>
                                    </Grid>
                                </Border>
                                <DataTemplate.Triggers>
                                    <Trigger Property="ListViewItem.IsMouseOver" Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="CloseButton" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="CloseButton" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <!--<ListView.Items>
                            <ListViewItem>
                                <ListViewItem.Content>
                                    <Image>
                                        <Image.Source>
                                            <Binding Source="{x:Static Properties:Resources.B737500RearLeft}" 
                                                     Converter="{StaticResource ImageConverter}" />
                                        </Image.Source>
                                    </Image>
                                </ListViewItem.Content>
                            </ListViewItem>
                            <ListViewItem>
                                <ListViewItem.Content>
                                    <Image>
                                        <Image.Source>
                                            <Binding Source="{x:Static Properties:Resources.B737500Side}" 
                                                     Converter="{StaticResource ImageConverter}" />
                                        </Image.Source>
                                    </Image>
                                </ListViewItem.Content>
                            </ListViewItem>
                            <ListViewItem>
                                <ListViewItem.Content>
                                    <Image>
                                        <Image.Source>
                                            <Binding Source="{x:Static Properties:Resources.ReloadIcon_gray}" 
                                                     Converter="{StaticResource ImageConverter}" />
                                        </Image.Source>
                                    </Image>
                                </ListViewItem.Content>
                            </ListViewItem>
                        </ListView.Items>-->
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="Images">
                <Grid Background="#FFE5E5E5">
                    <!--<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="100"/>
                    </Grid.RowDefinitions>
                    <Grid Name="ImageGrid" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0">
                        <Image Name="Image" Stretch="Fill">
                        </Image>
                    </Grid>
                    <Button Name="PrevLargeImageButton" Grid.Column="0" Grid.Row="0"
                            Opacity="0.1" Content="{StaticResource ArrowLeftPath}" Click="PrevLargeChartButton_OnClick"/>
                    <Button Name="NextLargeImageButton" Grid.Column="2" Grid.Row="0"
                            Opacity="0.1" Content="{StaticResource ArrowRightPath}" Click="NextLargeChartButton_OnClick"/>
                    <ListView Name="DamageImagesListView" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Style="{StaticResource ListViewStyle}">
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="auxiliary:DamageChartImage">
                                <Image Source="{Binding Image}"></Image>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>-->
                    <RichTextBox Name="RichTextBox">
                    </RichTextBox>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
